{"version":3,"sources":["components/Header.jsx","components/CountryCard.jsx","components/Loading.jsx","components/SearchAndFilter.jsx","components/Attribution.jsx","routes/Home.jsx","components/BorderCountryButton.jsx","routes/CountryDetail.jsx","App.js","index.js"],"names":["Header","props","darkmodeHandler","className","to","onClick","CountryCard","flagURL","code","name","population","region","capital","src","alt","toLocaleString","Loading","SearchAndFilter","inputText","inputTextHandler","clearInputTextHandler","filterOptionHandler","type","placeholder","value","onChange","class","id","defaultValue","Attribution","href","target","rel","Home","countries","loading","map","country","alpha3Code","flags","svg","BorderCountryButton","countryCode","countryCodeAndName","CountryDetail","match","params","useState","flag","nativeName","subregion","topLevelDomain","currencies","languages","borders","countryDetail","setCountryDetail","detailLoading","setDetailLoading","getCountryDetail","a","fetch","response","json","data","useEffect","currency","join","language","App","setInputText","setCountries","filterOption","setFilterOption","filteredCountries","setFilteredCountries","setCountryCodeAndName","setLoading","darkmode","setDarkmode","savedSetting","JSON","parse","sessionStorage","getItem","getFromSessionStorage","setItem","stringify","e","regex","RegExp","filter","test","filterCountriesHandler","getData","codeAndNameObj","forEach","prevState","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"qQAGe,SAASA,EAAOC,GAC9B,IAAQC,EAAoBD,EAApBC,gBAER,OACC,iCACC,sBAAKC,UAAU,mBAAf,UACC,cAAC,IAAD,CAAMC,GAAG,IAAT,SACC,qBAAKD,UAAU,eAAf,mCAED,sBAAKA,UAAU,gBAAgBE,QAASH,EAAxC,UACC,sBAAMC,UAAU,iBAAhB,uBADD,oBCTW,SAASG,EAAYL,GACnC,IAAQM,EAAqDN,EAArDM,QAASC,EAA4CP,EAA5CO,KAAMC,EAAsCR,EAAtCQ,KAAMC,EAAgCT,EAAhCS,WAAYC,EAAoBV,EAApBU,OAAQC,EAAYX,EAAZW,QAEjD,OACC,cAAC,IAAD,CAAMR,GAAE,0BAAqBI,GAA7B,SACC,sBAAKL,UAAU,eAAf,UACC,qBAAKU,IAAKN,EAASO,IAAG,kBAAaL,KACnC,sBAAKN,UAAU,sBAAf,UACC,8BAAMM,IACN,gCACC,gDACCC,EAAWK,oBAEb,gCACC,4CACCJ,KAEF,gCACC,6CACCC,aCpBQ,SAASI,IACvB,OAAO,6CCDO,SAASC,EAAgBhB,GACvC,IAAQiB,EAA4EjB,EAA5EiB,UAAWC,EAAiElB,EAAjEkB,iBAAkBC,EAA+CnB,EAA/CmB,sBAAuBC,EAAwBpB,EAAxBoB,oBAE5D,OACC,sBAAKlB,UAAU,oBAAf,UACC,sBAAKA,UAAU,SAAf,UACC,sBAAMA,UAAU,iBAAhB,oBACA,uBAAOmB,KAAK,OAAOC,YAAY,uBAAuBC,MAAON,EAAWO,SAAUN,IACjFD,EACA,sBAAMQ,MAAM,iCAAiCrB,QAASe,EAAtD,oBAIA,MAGF,8BACC,yBAAQX,KAAK,gBAAgBkB,GAAG,gBAAgBC,aAAa,MAAMH,SAAUJ,EAA7E,UACC,wBAAQG,MAAM,MAAd,yBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,6BCvBU,SAASK,IACvB,OACC,sBAAK1B,UAAU,cAAf,yBACc,IACb,mBAAG2B,KAAK,8CAA8CC,OAAO,SAASC,IAAI,sBAA1E,6BAFD,aAKY,IACX,mBAAGF,KAAK,+BAA+BC,OAAO,SAASC,IAAI,sBAA3D,uBAND,OCuCaC,MAnCf,SAAchC,GACb,IAAQiC,EAAgGjC,EAAhGiC,UAAWC,EAAqFlC,EAArFkC,QAASjB,EAA4EjB,EAA5EiB,UAAWC,EAAiElB,EAAjEkB,iBAAkBC,EAA+CnB,EAA/CmB,sBAAuBC,EAAwBpB,EAAxBoB,oBAEhF,OACC,sBAAKlB,UAAU,OAAf,UACC,cAACc,EAAD,CACCC,UAAWA,EACXC,iBAAkBA,EAClBC,sBAAuBA,EACvBC,oBAAqBA,IAEtB,qBAAKlB,UAAU,gBAAf,SACEgC,EACA,cAACnB,EAAD,IAEAkB,EAAUE,KAAI,SAACC,GACd,OACC,cAAC/B,EAAD,CAECE,KAAM6B,EAAQC,WACd/B,QAAS8B,EAAQE,MAAMC,IACvB/B,KAAM4B,EAAQ5B,KACdC,WAAY2B,EAAQ3B,WACpBC,OAAQ0B,EAAQ1B,OAChBC,QAASyB,EAAQzB,SANZyB,EAAQC,iBAYlB,cAACT,EAAD,QCnCY,SAASY,EAAoBxC,GAC3C,IAAQyC,EAAoCzC,EAApCyC,YAAaC,EAAuB1C,EAAvB0C,mBAErB,OACC,cAAC,IAAD,CAAMvC,GAAE,0BAAqBsC,GAA7B,SACC,qBAAKvC,UAAU,qBAAf,SAAqCwC,EAAmBD,OCoG5CE,MArGf,SAAuB3C,GACtB,IAAQ4C,EAA8B5C,EAA9B4C,MAAOF,EAAuB1C,EAAvB0C,mBACTD,EAAcG,EAAMC,OAAOtC,KAEjC,EAA0CuC,mBAAS,CAClDC,KAAM,GACNvC,KAAM,GACNwC,WAAY,GACZvC,WAAY,EACZC,OAAQ,GACRuC,UAAW,GACXtC,QAAS,GACTuC,eAAgB,GAChBC,WAAY,GACZC,UAAW,GACXC,QAAS,KAXV,mBAAOC,EAAP,KAAsBC,EAAtB,KAcA,EAA0CT,oBAAS,GAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KAEMC,EAAgB,uCAAG,8BAAAC,EAAA,6DACxBF,GAAiB,GADO,SAEDG,MAAM,sCAAD,OACWnB,EADX,iHAFJ,cAElBoB,EAFkB,gBAKLA,EAASC,OALJ,OAKlBC,EALkB,OAMxBR,EAAiBQ,GACjBN,GAAiB,GAPO,2CAAH,qDActB,OAJAO,qBAAU,WACTN,MACE,CAACjB,IAGH,sBAAKvC,UAAU,2BAAf,UACC,qBAAKA,UAAU,mBAAf,SACC,eAAC,IAAD,CAAMC,GAAG,IAAT,UACC,sBAAMD,UAAU,iBAAhB,wBADD,YAIAsD,EACA,cAACzC,EAAD,IAEA,sBAAKb,UAAU,iBAAf,UACC,qBAAKU,IAAK0C,EAAcP,KAAMlC,IAAG,kBAAayC,EAAc9C,QAC5D,gCACC,8BAAM8C,EAAc9C,OACpB,sBAAKN,UAAU,sBAAf,UACC,gCACC,gCACC,iDACCoD,EAAcN,cAEhB,gCACC,gDACCM,EAAc7C,WAAWK,oBAE3B,gCACC,4CACCwC,EAAc5C,UAEhB,gCACC,gDACC4C,EAAcL,aAEhB,gCACC,6CACCK,EAAc3C,cAGjB,gCACC,gCACC,sDACC2C,EAAcJ,eAAe,MAE/B,gCACC,gDACCI,EAAcH,WAAaG,EAAcH,WAAWhB,KAAI,SAAC8B,GAAD,OAAcA,EAASzD,QAAM0D,KAAK,MAAQ,MAEpG,gCACC,+CACCZ,EAAcF,UAAUjB,KAAI,SAACgC,GAAD,OAAcA,EAAS3D,QAAM0D,KAAK,eAIlE,gCACC,sDACCZ,EAAcD,QACZC,EAAcD,QAAQlB,KAAI,SAACM,GAC3B,OAAO,cAACD,EAAD,CAAuCC,YAAaA,EAAaC,mBAAoBA,GAA3DD,MAEjC,gBCYK2B,MAtGf,WACC,MAAkCtB,mBAAS,IAA3C,mBAAO7B,EAAP,KAAkBoD,EAAlB,KACA,EAAkCvB,mBAAS,IAA3C,mBAAOb,EAAP,KAAkBqC,EAAlB,KACA,EAAwCxB,mBAAS,OAAjD,mBAAOyB,EAAP,KAAqBC,EAArB,KACA,EAAkD1B,mBAAS,IAA3D,mBAAO2B,EAAP,KAA0BC,EAA1B,KACA,EAAoD5B,mBAAS,IAA7D,mBAAOJ,EAAP,KAA2BiC,EAA3B,KACA,EAA8B7B,oBAAS,GAAvC,mBAAOZ,EAAP,KAAgB0C,EAAhB,KACA,EAAgC9B,oBAAS,GAAzC,mBAAO+B,EAAP,KAAiBC,EAAjB,KAWAd,qBAAU,YARoB,WAC7B,IAAMe,EAAeC,KAAKC,MAAMC,eAAeC,QAAQ,oBAEnDJ,GACHD,EAAYC,GAKbK,KACE,IAOHpB,qBAAU,WAHTkB,eAAeG,QAAQ,kBAAmBL,KAAKM,UAAUT,MAKvD,CAACA,IAEJ,IAIM3D,EAAmB,SAACqE,GACzBlB,EAAakB,EAAEzD,OAAOP,QAGjBJ,EAAwB,WAC7BkD,EAAa,KAGRjD,EAAsB,SAACmE,GAC5Bf,EAAgBe,EAAEzD,OAAOP,QAa1ByC,qBAAU,YAVqB,WAC9B,IAAMwB,EAAQ,IAAIC,OAAJ,UAAcxE,GAAa,KAGxCyD,EADoB,QAAjBH,EACkBtC,EAAUyD,QAAO,SAACtD,GAAD,OAAaoD,EAAMG,KAAKvD,EAAQ5B,SAEjDyB,EAAUyD,QAAO,SAACtD,GAAD,OAAaoD,EAAMG,KAAKvD,EAAQ5B,OAAS4B,EAAQ1B,SAAW6D,MAKnGqB,KACE,CAAC3D,EAAWhB,EAAWsD,IAE1B,IAAMsB,EAAO,uCAAG,gCAAAlC,EAAA,sEACQC,MAAM,2FADd,cACTC,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAIT+B,EAAiB,GACvB/B,EAAKgC,SAAQ,SAAC3D,GAAD,OAAc0D,EAAe1D,EAAQC,YAAcD,EAAQ5B,QAExEmE,EAAsBmB,GACtBxB,EAAaP,GACba,GAAW,GATI,4CAAH,qDAgBb,OAJAZ,qBAAU,WACT6B,MACE,IAGF,qBAAK3F,UAAS,cAAS2E,EAAW,WAAa,IAA/C,SACC,eAAC,IAAD,WACC,cAAC9E,EAAD,CAAQE,gBAjDa,WACvB6E,GAAY,SAACkB,GAAD,OAAgBA,QAiD1B,cAAC,IAAD,CACCC,KAAK,IACLC,OAAK,EACLC,OAAQ,SAACnG,GAAD,OACP,cAAC,EAAD,2BACKA,GADL,IAECiC,UAAWwC,EACXvC,QAASA,EACTjB,UAAWA,EACXC,iBAAkBA,EAClBC,sBAAuBA,EACvBC,oBAAqBA,QAIxB,cAAC,IAAD,CAAO6E,KAAK,wBAAwBE,OAAQ,SAACnG,GAAD,OAAW,cAAC,EAAD,2BAAmBA,GAAnB,IAA0B0C,mBAAoBA,cCpGzG0D,IAASD,OACR,cAAC,IAAME,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.981257d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header(props) {\r\n\tconst { darkmodeHandler } = props;\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className=\"header-container\">\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<div className=\"header-title\">Where in the world?</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"dark-mode-btn\" onClick={darkmodeHandler}>\r\n\t\t\t\t\t<span className=\"material-icons\">dark_mode</span>\r\n\t\t\t\t\tDark Mode\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function CountryCard(props) {\r\n\tconst { flagURL, code, name, population, region, capital } = props;\r\n\r\n\treturn (\r\n\t\t<Link to={`/country-detail/${code}`}>\r\n\t\t\t<div className=\"country-card\">\r\n\t\t\t\t<img src={flagURL} alt={`Flag of ${name}`} />\r\n\t\t\t\t<div className=\"country-card-detail\">\r\n\t\t\t\t\t<div>{name}</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Population: </span>\r\n\t\t\t\t\t\t{population.toLocaleString()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Region: </span>\r\n\t\t\t\t\t\t{region}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Capital: </span>\r\n\t\t\t\t\t\t{capital}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Loading() {\r\n\treturn <div>Loading...</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SearchAndFilter(props) {\r\n\tconst { inputText, inputTextHandler, clearInputTextHandler, filterOptionHandler } = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"search-and-filter\">\r\n\t\t\t<div className=\"search\">\r\n\t\t\t\t<span className=\"material-icons\">search</span>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Search for a country\" value={inputText} onChange={inputTextHandler} />\r\n\t\t\t\t{inputText ? (\r\n\t\t\t\t\t<span class=\"material-icons clear-input-btn\" onClick={clearInputTextHandler}>\r\n\t\t\t\t\t\tcancel\r\n\t\t\t\t\t</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<select name=\"region-filter\" id=\"region-filter\" defaultValue=\"All\" onChange={filterOptionHandler}>\r\n\t\t\t\t\t<option value=\"All\">All regions</option>\r\n\t\t\t\t\t<option value=\"Africa\">Africa</option>\r\n\t\t\t\t\t<option value=\"Americas\">Americas</option>\r\n\t\t\t\t\t<option value=\"Asia\">Asia</option>\r\n\t\t\t\t\t<option value=\"Europe\">Europe</option>\r\n\t\t\t\t\t<option value=\"Oceania\">Oceania</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Attribution() {\r\n\treturn (\r\n\t\t<div className=\"attribution\">\r\n\t\t\tChallenge by{' '}\r\n\t\t\t<a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\tFrontend Mentor\r\n\t\t\t</a>\r\n\t\t\t. Coded by{' '}\r\n\t\t\t<a href=\"https://github.com/quanmtran\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\tQuan Tran\r\n\t\t\t</a>\r\n\t\t\t.\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\n\n// Import components\nimport CountryCard from '../components/CountryCard.jsx';\nimport Loading from '../components/Loading.jsx';\nimport SearchAndFilter from '../components/SearchAndFilter.jsx';\nimport Attribution from '../components/Attribution';\n\nfunction Home(props) {\n\tconst { countries, loading, inputText, inputTextHandler, clearInputTextHandler, filterOptionHandler } = props;\n\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<SearchAndFilter\n\t\t\t\tinputText={inputText}\n\t\t\t\tinputTextHandler={inputTextHandler}\n\t\t\t\tclearInputTextHandler={clearInputTextHandler}\n\t\t\t\tfilterOptionHandler={filterOptionHandler}\n\t\t\t/>\n\t\t\t<div className=\"country-cards\">\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Loading />\n\t\t\t\t) : (\n\t\t\t\t\tcountries.map((country) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CountryCard\n\t\t\t\t\t\t\t\tkey={country.alpha3Code}\n\t\t\t\t\t\t\t\tcode={country.alpha3Code}\n\t\t\t\t\t\t\t\tflagURL={country.flags.svg}\n\t\t\t\t\t\t\t\tname={country.name}\n\t\t\t\t\t\t\t\tpopulation={country.population}\n\t\t\t\t\t\t\t\tregion={country.region}\n\t\t\t\t\t\t\t\tcapital={country.capital}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<Attribution />\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function BorderCountryButton(props) {\r\n\tconst { countryCode, countryCodeAndName } = props;\r\n\r\n\treturn (\r\n\t\t<Link to={`/country-detail/${countryCode}`}>\r\n\t\t\t<div className=\"border-country-btn\">{countryCodeAndName[countryCode]}</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Import components\r\nimport BorderCountryButton from '../components/BorderCountryButton';\r\nimport Loading from '../components/Loading';\r\n\r\nfunction CountryDetail(props) {\r\n\tconst { match, countryCodeAndName } = props;\r\n\tconst countryCode = match.params.code;\r\n\r\n\tconst [countryDetail, setCountryDetail] = useState({\r\n\t\tflag: '',\r\n\t\tname: '',\r\n\t\tnativeName: '',\r\n\t\tpopulation: 0,\r\n\t\tregion: '',\r\n\t\tsubregion: '',\r\n\t\tcapital: '',\r\n\t\ttopLevelDomain: [],\r\n\t\tcurrencies: [],\r\n\t\tlanguages: [],\r\n\t\tborders: [],\r\n\t});\r\n\r\n\tconst [detailLoading, setDetailLoading] = useState(true);\r\n\r\n\tconst getCountryDetail = async () => {\r\n\t\tsetDetailLoading(true);\r\n\t\tconst response = await fetch(\r\n\t\t\t`https://restcountries.com/v2/alpha/${countryCode}?fields=flag,name,nativeName,population,region,subregion,capital,topLevelDomain,currencies,languages,borders`\r\n\t\t);\r\n\t\tconst data = await response.json();\r\n\t\tsetCountryDetail(data);\r\n\t\tsetDetailLoading(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCountryDetail();\r\n\t}, [countryCode]);\r\n\r\n\treturn (\r\n\t\t<div className=\"country-detail-container\">\r\n\t\t\t<div className=\"back-to-home-btn\">\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<span className=\"material-icons\">arrow_back</span>Back\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t{detailLoading ? (\r\n\t\t\t\t<Loading />\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"country-detail\">\r\n\t\t\t\t\t<img src={countryDetail.flag} alt={`Flag of ${countryDetail.name}`} />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>{countryDetail.name}</div>\r\n\t\t\t\t\t\t<div className=\"country-detail-text\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Native Name: </span>\r\n\t\t\t\t\t\t\t\t\t{countryDetail.nativeName}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Population: </span>\r\n\t\t\t\t\t\t\t\t\t{countryDetail.population.toLocaleString()}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Region: </span>\r\n\t\t\t\t\t\t\t\t\t{countryDetail.region}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Sub Region: </span>\r\n\t\t\t\t\t\t\t\t\t{countryDetail.subregion}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Capital: </span>\r\n\t\t\t\t\t\t\t\t\t{countryDetail.capital}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Top Level Domain: </span>\r\n\t\t\t\t\t\t\t\t\t{countryDetail.topLevelDomain[0]}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Currencies: </span>\r\n\t\t\t\t\t\t\t\t\t{countryDetail.currencies ? countryDetail.currencies.map((currency) => currency.name).join(', ') : ''}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Languages: </span>\r\n\t\t\t\t\t\t\t\t\t{countryDetail.languages.map((language) => language.name).join(', ')}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>Border Countries: </span>\r\n\t\t\t\t\t\t\t{countryDetail.borders\r\n\t\t\t\t\t\t\t\t? countryDetail.borders.map((countryCode) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <BorderCountryButton key={countryCode} countryCode={countryCode} countryCodeAndName={countryCodeAndName} />;\r\n\t\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CountryDetail;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n// Import components\nimport Header from './components/Header.jsx';\nimport Home from './routes/Home.jsx';\nimport CountryDetail from './routes/CountryDetail.jsx';\n\nfunction App() {\n\tconst [inputText, setInputText] = useState('');\n\tconst [countries, setCountries] = useState([]);\n\tconst [filterOption, setFilterOption] = useState('All');\n\tconst [filteredCountries, setFilteredCountries] = useState([]);\n\tconst [countryCodeAndName, setCountryCodeAndName] = useState({});\n\tconst [loading, setLoading] = useState(true);\n\tconst [darkmode, setDarkmode] = useState(false);\n\n\t// Get darkmode setting from session storage\n\tconst getFromSessionStorage = () => {\n\t\tconst savedSetting = JSON.parse(sessionStorage.getItem('darkmodeSetting'));\n\n\t\tif (savedSetting) {\n\t\t\tsetDarkmode(savedSetting);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetFromSessionStorage();\n\t}, []);\n\n\t// Save darkmode setting to session storage\n\tconst saveToSessionStorage = () => {\n\t\tsessionStorage.setItem('darkmodeSetting', JSON.stringify(darkmode));\n\t};\n\n\tuseEffect(() => {\n\t\tsaveToSessionStorage();\n\t}, [darkmode]);\n\n\tconst darkmodeHandler = () => {\n\t\tsetDarkmode((prevState) => !prevState);\n\t};\n\n\tconst inputTextHandler = (e) => {\n\t\tsetInputText(e.target.value);\n\t};\n\n\tconst clearInputTextHandler = () => {\n\t\tsetInputText('');\n\t};\n\n\tconst filterOptionHandler = (e) => {\n\t\tsetFilterOption(e.target.value);\n\t};\n\n\tconst filterCountriesHandler = () => {\n\t\tconst regex = new RegExp(`${inputText}`, 'i');\n\n\t\tif (filterOption === 'All') {\n\t\t\tsetFilteredCountries(countries.filter((country) => regex.test(country.name)));\n\t\t} else {\n\t\t\tsetFilteredCountries(countries.filter((country) => regex.test(country.name) && country.region === filterOption));\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfilterCountriesHandler();\n\t}, [countries, inputText, filterOption]);\n\n\tconst getData = async () => {\n\t\tconst response = await fetch('https://restcountries.com/v2/all?fields=flags,alpha3Code,name,population,region,capital');\n\t\tconst data = await response.json();\n\n\t\tconst codeAndNameObj = {};\n\t\tdata.forEach((country) => (codeAndNameObj[country.alpha3Code] = country.name));\n\n\t\tsetCountryCodeAndName(codeAndNameObj);\n\t\tsetCountries(data);\n\t\tsetLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tgetData();\n\t}, []);\n\n\treturn (\n\t\t<div className={`App ${darkmode ? 'darkmode' : ''}`}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Header darkmodeHandler={darkmodeHandler} />\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/\"\n\t\t\t\t\texact\n\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\tcountries={filteredCountries}\n\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\tinputText={inputText}\n\t\t\t\t\t\t\tinputTextHandler={inputTextHandler}\n\t\t\t\t\t\t\tclearInputTextHandler={clearInputTextHandler}\n\t\t\t\t\t\t\tfilterOptionHandler={filterOptionHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"/country-detail/:code\" render={(props) => <CountryDetail {...props} countryCodeAndName={countryCodeAndName} />} />\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}